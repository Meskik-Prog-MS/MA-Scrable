/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package org.eehouse.android.xw4;

public final class R {
    public static final class array {
        /** string name="dict_url">http://10.0.2.2/~eehouse/and_dicts</string
         */
        public static final int board_sizes=0x7f070000;
        public static final int confirm_sms_reasons=0x7f07000a;
        public static final int connect_frequencies=0x7f070003;
        public static final int connect_frequencies_values=0x7f070005;
        public static final int game_summary_values=0x7f070009;
        public static final int language_codes=0x7f070007;
        public static final int language_names=0x7f070006;
        /**  Keep in sync with LocSearcher SHOW_BYS enum 
         */
        public static final int loc_filters=0x7f07000b;
        /**  Keep in sync with DictUtils.DictLoc enum 
         */
        public static final int loc_names=0x7f070004;
        /**  Triples of Name, supported codes, and URL format string 
         */
        public static final int lookup_urls=0x7f070008;
        public static final int phony_names=0x7f070001;
        public static final int robot_levels=0x7f070002;
    }
    public static final class attr {
    }
    public static final class drawable {
        public static final int back__gen=0x7f020000;
        public static final int clear_all__gen=0x7f020001;
        public static final int content_copy__gen=0x7f020002;
        public static final int content_discard__gen=0x7f020003;
        public static final int content_edit=0x7f020004;
        public static final int content_new__gen=0x7f020005;
        public static final int dict__gen=0x7f020006;
        public static final int dicticon=0x7f020007;
        public static final int down__gen=0x7f020008;
        public static final int downarrow=0x7f020009;
        public static final int download__gen=0x7f02000a;
        public static final int email__gen=0x7f02000b;
        public static final int expander_ic_maximized=0x7f02000c;
        public static final int expander_ic_minimized=0x7f02000d;
        public static final int flip=0x7f02000e;
        public static final int icon48x48=0x7f02000f;
        public static final int in_arrow=0x7f020010;
        public static final int in_arrow_active=0x7f020011;
        public static final int new_group__gen=0x7f020012;
        public static final int next_hint=0x7f020013;
        public static final int origin=0x7f020014;
        public static final int out_arrow=0x7f020015;
        public static final int out_arrow_active=0x7f020016;
        public static final int prefs__gen=0x7f020017;
        public static final int prev_hint=0x7f020018;
        public static final int refresh=0x7f020019;
        public static final int relabel__gen=0x7f02001a;
        public static final int relaygame=0x7f02001b;
        public static final int reset__gen=0x7f02001c;
        public static final int rightarrow=0x7f02001d;
        public static final int save__gen=0x7f02001e;
        public static final int search__gen=0x7f02001f;
        public static final int select_all__gen=0x7f020020;
        public static final int send__gen=0x7f020021;
        public static final int shuffle=0x7f020022;
        public static final int sologame=0x7f020023;
        public static final int stat_notify_chat=0x7f020024;
        public static final int stat_notify_sync=0x7f020025;
        public static final int undo=0x7f020026;
        public static final int up__gen=0x7f020027;
        public static final int values=0x7f020028;
        public static final int zoom=0x7f020029;
    }
    public static final class id {
        public static final int about_xlator=0x7f0a0001;
        public static final int add_player=0x7f0a002a;
        public static final int advertise_new_room_check=0x7f0a0030;
        public static final int blessed_label=0x7f0a0050;
        public static final int board_menu_chat=0x7f0a00aa;
        public static final int board_menu_dict=0x7f0a00a6;
        public static final int board_menu_done=0x7f0a0091;
        public static final int board_menu_file_about=0x7f0a009f;
        public static final int board_menu_file_prefs=0x7f0a009e;
        public static final int board_menu_flip=0x7f0a00a8;
        public static final int board_menu_game_counts=0x7f0a0097;
        public static final int board_menu_game_history=0x7f0a0099;
        public static final int board_menu_game_left=0x7f0a0098;
        public static final int board_menu_game_netstats=0x7f0a00a0;
        public static final int board_menu_game_resend=0x7f0a009b;
        public static final int board_menu_game_resign=0x7f0a009a;
        public static final int board_menu_hint_next=0x7f0a00a4;
        public static final int board_menu_hint_prev=0x7f0a00a3;
        public static final int board_menu_invite=0x7f0a0090;
        public static final int board_menu_juggle=0x7f0a00a7;
        public static final int board_menu_toggle=0x7f0a00ab;
        public static final int board_menu_trade=0x7f0a0092;
        public static final int board_menu_trade_cancel=0x7f0a0093;
        public static final int board_menu_trade_commit=0x7f0a0094;
        public static final int board_menu_tray=0x7f0a0096;
        public static final int board_menu_undo_current=0x7f0a00a5;
        public static final int board_menu_undo_last=0x7f0a0095;
        public static final int board_menu_zoom=0x7f0a00a9;
        public static final int board_root=0x7f0a0002;
        public static final int board_view=0x7f0a0003;
        public static final int boardsize_spinner=0x7f0a003d;
        public static final int bt_disabled=0x7f0a0068;
        public static final int bt_separator=0x7f0a0067;
        public static final int bt_stuff=0x7f0a006a;
        public static final int button_add=0x7f0a007f;
        public static final int button_clear=0x7f0a000b;
        public static final int button_done=0x7f0a005b;
        public static final int button_invite=0x7f0a000c;
        public static final int button_rescan=0x7f0a000a;
        public static final int button_study=0x7f0a005a;
        public static final int chat_button=0x7f0a008b;
        public static final int chat_edit=0x7f0a000e;
        public static final int chat_history=0x7f0a000d;
        public static final int chat_menu_clear=0x7f0a00ac;
        public static final int checkbox=0x7f0a004a;
        public static final int color_display_sample=0x7f0a0010;
        public static final int color_edit_sample=0x7f0a0011;
        public static final int config_button=0x7f0a007b;
        public static final int confirm_sms_reasons=0x7f0a0018;
        public static final int connect_set_relay=0x7f0a002c;
        public static final int connect_set_sms=0x7f0a0034;
        public static final int del=0x7f0a004d;
        public static final int desc=0x7f0a001b;
        public static final int details=0x7f0a007c;
        public static final int dict_label=0x7f0a0071;
        public static final int dict_spinner=0x7f0a0027;
        public static final int dictlist_button=0x7f0a008a;
        public static final int dicts_delete=0x7f0a00af;
        public static final int dicts_deselect_all=0x7f0a00ae;
        public static final int dicts_download=0x7f0a00ad;
        public static final int dicts_move=0x7f0a00b0;
        public static final int dicts_select=0x7f0a00b1;
        public static final int divider=0x7f0a0020;
        public static final int download_button=0x7f0a007d;
        public static final int dwnld_message=0x7f0a0048;
        public static final int edit=0x7f0a006d;
        public static final int edit_blue=0x7f0a0017;
        public static final int edit_green=0x7f0a0015;
        public static final int edit_red=0x7f0a0013;
        public static final int english_label=0x7f0a004e;
        public static final int english_view=0x7f0a004f;
        public static final int exchange_buttons=0x7f0a0004;
        public static final int exchange_cancel=0x7f0a0006;
        public static final int exchange_commit=0x7f0a0005;
        public static final int expander=0x7f0a003f;
        public static final int explain=0x7f0a0079;
        public static final int filters=0x7f0a0055;
        public static final int flip_button=0x7f0a008d;
        public static final int game_locked_check=0x7f0a0022;
        public static final int game_name=0x7f0a003e;
        public static final int gamel_menu_checkmoves=0x7f0a009d;
        public static final int games_game_config=0x7f0a00bc;
        public static final int games_game_copy=0x7f0a00c1;
        public static final int games_game_delete=0x7f0a00bb;
        public static final int games_game_move=0x7f0a00bd;
        public static final int games_game_new_from=0x7f0a00bf;
        public static final int games_game_rename=0x7f0a00c0;
        public static final int games_game_reset=0x7f0a00be;
        public static final int games_group_default=0x7f0a00c5;
        public static final int games_group_delete=0x7f0a00c4;
        public static final int games_group_movedown=0x7f0a00c3;
        public static final int games_group_moveup=0x7f0a00c2;
        public static final int games_group_rename=0x7f0a00c6;
        public static final int games_menu_about=0x7f0a00b8;
        public static final int games_menu_checkmoves=0x7f0a00ba;
        public static final int games_menu_checkupdates=0x7f0a00c7;
        public static final int games_menu_dicts=0x7f0a00b6;
        public static final int games_menu_email=0x7f0a00b7;
        public static final int games_menu_loaddb=0x7f0a00c9;
        public static final int games_menu_newgame=0x7f0a00b2;
        public static final int games_menu_newgroup=0x7f0a00b3;
        public static final int games_menu_prefs=0x7f0a00b4;
        public static final int games_menu_rateme=0x7f0a00b5;
        public static final int games_menu_resend=0x7f0a00b9;
        public static final int games_menu_storedb=0x7f0a00c8;
        public static final int games_menu_study=0x7f0a009c;
        public static final int group_done=0x7f0a008f;
        public static final int group_exchange=0x7f0a00a1;
        public static final int group_hint=0x7f0a00a2;
        public static final int hideable=0x7f0a0044;
        public static final int hints_allowed=0x7f0a0036;
        public static final int invite_desc=0x7f0a0009;
        public static final int item_name=0x7f0a0075;
        public static final int item_score=0x7f0a0076;
        public static final int join_public_room_check=0x7f0a002d;
        public static final int juggle_players=0x7f0a002b;
        public static final int lang_separator=0x7f0a0025;
        public static final int lang_spinner=0x7f0a0026;
        public static final int loc_item_check=0x7f0a00cb;
        public static final int loc_item_clear=0x7f0a00ca;
        public static final int loc_item_copy_bless=0x7f0a00cd;
        public static final int loc_item_copy_eng=0x7f0a00cc;
        public static final int loc_search_button=0x7f0a0057;
        public static final int loc_search_field=0x7f0a0056;
        public static final int local_label=0x7f0a0052;
        public static final int local_name_edit=0x7f0a007a;
        public static final int local_player_set=0x7f0a006f;
        public static final int manual_add_button=0x7f0a0080;
        public static final int modtime=0x7f0a0045;
        public static final int msg_marker=0x7f0a0042;
        public static final int name=0x7f0a0081;
        public static final int name_edit=0x7f0a0019;
        public static final int name_label=0x7f0a007e;
        public static final int newgame_bt_config=0x7f0a006c;
        public static final int newgame_enable_bt=0x7f0a0069;
        public static final int newgame_enable_sms=0x7f0a0063;
        public static final int newgame_invite_bt=0x7f0a006b;
        public static final int newgame_invite_net=0x7f0a005f;
        public static final int newgame_invite_sms=0x7f0a0065;
        public static final int newgame_local=0x7f0a005d;
        public static final int newgame_local_config=0x7f0a005e;
        public static final int newgame_local_desc=0x7f0a005c;
        public static final int newgame_net_config=0x7f0a0060;
        public static final int newgame_sms_config=0x7f0a0066;
        public static final int nexthint_button=0x7f0a0087;
        public static final int number=0x7f0a0082;
        public static final int other_lang=0x7f0a0058;
        public static final int password_edit=0x7f0a0074;
        public static final int password_set=0x7f0a0073;
        public static final int phonies_spinner=0x7f0a003b;
        public static final int pick_faceup=0x7f0a003c;
        public static final int pick_lang=0x7f0a0083;
        public static final int pick_lang_spinner=0x7f0a0084;
        public static final int play_button=0x7f0a0023;
        public static final int player_list=0x7f0a0029;
        public static final int player_name_edit=0x7f0a0070;
        public static final int players=0x7f0a0021;
        public static final int players_label=0x7f0a0028;
        public static final int prevhint_button=0x7f0a0086;
        public static final int private_rooms_set=0x7f0a002e;
        public static final int progress_bar=0x7f0a0049;
        public static final int public_rooms_set=0x7f0a0031;
        public static final int refresh_button=0x7f0a0033;
        public static final int remote_check=0x7f0a006e;
        public static final int revert_all=0x7f0a0078;
        public static final int revert_colors=0x7f0a0077;
        public static final int robot_check=0x7f0a0072;
        public static final int role=0x7f0a0047;
        public static final int room_edit=0x7f0a002f;
        public static final int room_spinner=0x7f0a0032;
        public static final int screen=0x7f0a0024;
        public static final int search_button=0x7f0a001d;
        public static final int seek_blue=0x7f0a0016;
        public static final int seek_green=0x7f0a0014;
        public static final int seek_red=0x7f0a0012;
        public static final int send_button=0x7f0a000f;
        public static final int show_remote=0x7f0a001a;
        public static final int shuffle_button=0x7f0a0088;
        public static final int slmenu_clear_sel=0x7f0a00d2;
        public static final int slmenu_copy_sel=0x7f0a00d1;
        public static final int slmenu_deselect_all=0x7f0a00d0;
        public static final int slmenu_lookup_sel=0x7f0a00ce;
        public static final int slmenu_select_all=0x7f0a00cf;
        public static final int smart_robot=0x7f0a003a;
        public static final int sms_disabled=0x7f0a0062;
        public static final int sms_phones=0x7f0a0035;
        public static final int sms_separator=0x7f0a0061;
        public static final int sms_stuff=0x7f0a0064;
        public static final int state=0x7f0a0046;
        public static final int summary=0x7f0a0059;
        public static final int tbar_parent_hor=0x7f0a0007;
        public static final int tbar_parent_vert=0x7f0a0008;
        public static final int text_item=0x7f0a004b;
        public static final int text_item2=0x7f0a004c;
        public static final int thumbnail=0x7f0a0043;
        public static final int timer_minutes_edit=0x7f0a0039;
        public static final int timer_set=0x7f0a0038;
        public static final int toolbar=0x7f0a0085;
        public static final int undo_button=0x7f0a0089;
        public static final int use_timer=0x7f0a0037;
        public static final int values_button=0x7f0a008c;
        public static final int version_string=0x7f0a0000;
        public static final int view_loaded=0x7f0a0041;
        public static final int view_unloaded=0x7f0a0040;
        public static final int word_edit=0x7f0a001c;
        public static final int wordlen_max=0x7f0a001f;
        public static final int wordlen_min=0x7f0a001e;
        public static final int xlated_view=0x7f0a0054;
        public static final int xlated_view_blessed=0x7f0a0051;
        public static final int xlated_view_local=0x7f0a0053;
        public static final int zoom_button=0x7f0a008e;
    }
    public static final class layout {
        public static final int about_dlg=0x7f030000;
        public static final int board=0x7f030001;
        public static final int btinviter=0x7f030002;
        public static final int btinviter_item=0x7f030003;
        public static final int chat=0x7f030004;
        public static final int chat_history_local=0x7f030005;
        public static final int chat_history_remote=0x7f030006;
        public static final int color_display=0x7f030007;
        public static final int color_edit=0x7f030008;
        public static final int confirm_sms=0x7f030009;
        public static final int dflt_name=0x7f03000a;
        public static final int dict_browse=0x7f03000b;
        public static final int dict_browser=0x7f03000c;
        public static final int divider_view=0x7f03000d;
        public static final int force_remote=0x7f03000e;
        public static final int game_config=0x7f03000f;
        public static final int game_list=0x7f030010;
        public static final int game_list_group=0x7f030011;
        public static final int game_list_item=0x7f030012;
        public static final int import_dict=0x7f030013;
        public static final int import_dict_item=0x7f030014;
        public static final int list_group=0x7f030015;
        public static final int list_item=0x7f030016;
        public static final int loc_item_edit=0x7f030017;
        public static final int loc_list_item=0x7f030018;
        public static final int loc_main=0x7f030019;
        public static final int lookup=0x7f03001a;
        public static final int new_game=0x7f03001b;
        public static final int passwd_view=0x7f03001c;
        public static final int player_edit=0x7f03001d;
        public static final int player_list_elem=0x7f03001e;
        public static final int prefs_w_buttons=0x7f03001f;
        public static final int relay_game_config=0x7f030020;
        public static final int remote_dict_details=0x7f030021;
        public static final int rename_game=0x7f030022;
        public static final int smsinviter=0x7f030023;
        public static final int smsinviter_item=0x7f030024;
        public static final int studylist=0x7f030025;
        public static final int toolbar=0x7f030026;
    }
    public static final class menu {
        public static final int board_menu=0x7f090000;
        public static final int chat_menu=0x7f090001;
        public static final int dicts_menu=0x7f090002;
        public static final int empty=0x7f090003;
        public static final int games_list_menu=0x7f090004;
        public static final int loc_item_menu=0x7f090005;
        public static final int studylist=0x7f090006;
    }
    public static final class raw {
        public static final int changes=0x7f050000;
    }
    public static final class string {
        /**  copyright info 
         */
        public static final int about_copyright=0x7f0601e0;
        /**  Another paragraph giving credit for work done other than by
         Eric House and translators 
         */
        public static final int about_credits=0x7f0601e3;
        /**  
       ###########################################################
       # :Dialogs:
       # About dialog
       #
       # Dialog giving copyright and other basic info about # the app
       ########################################################### 
      
 String giving version info, which is substituted in. 
         */
        public static final int about_vers_fmt=0x7f0601df;
        /**  Another paragraph in the about dialog 
         */
        public static final int about_web=0x7f0601e1;
        public static final int add_done_fmt=0x7f060297;
        public static final int add_to_study_fmt=0x7f06028f;
        /**  Debugging stuff. No point in localizing it. 
         */
        public static final int advanced=0x7f060076;
        /**  This button takes you to the normal Game Configure screen 
         */
        public static final int advanced_config=0x7f06019b;
        public static final int advanced_summary=0x7f060077;
        /**   
         */
        public static final int alert_empty_dict_fmt=0x7f0601fd;
        /**  The name of the app.  Not localized! 
         */
        public static final int app_name=0x7f060001;
        public static final int app_version=0x7f060000;
        /**  the background color of the area outside the board,
         e.g. between entries in the scoreboard 
         */
        public static final int background=0x7f060159;
        /**  Appended to the above in the phonies_warn case.  User may
         ignore the warning 
         */
        public static final int badwords_accept=0x7f0600ff;
        /**  Appended to the above in the phonies_disallow case.  User has
         lost his turn. 
         */
        public static final int badwords_lost=0x7f060100;
        /**  title of the dialog in which the above is posted. 
         */
        public static final int badwords_title=0x7f060101;
        public static final int blue=0x7f06015d;
        /**  board menu for small devices only 
         */
        public static final int board_menu_dict=0x7f060239;
        /**     
       ############################################################
       # :Menus:
       # Board screen menu
       ############################################################
      
 This menu commits the current move as it's been laid out on
         the board 
         */
        public static final int board_menu_done=0x7f060102;
        /**  Brings up "About Crosswords" dialog 
         */
        public static final int board_menu_file_about=0x7f06009f;
        /**   
         */
        public static final int board_menu_file_email=0x7f060202;
        /**  menu on Game submenu: brings up dialog listing all tiles in
         the language of the game along with how many of each there
         are and how many points each is worth.  This display is the
         same throughout the game. 
         */
        public static final int board_menu_game_counts=0x7f060108;
        /**  Brings up explanation of the game's final score.  If the game
         is not yet over, gives you a choice whether to end it now,
         and if you decline does nothing. 
         */
        public static final int board_menu_game_final=0x7f06010b;
        /**  Brings up listing of all moves played so far this game.  
         */
        public static final int board_menu_game_history=0x7f06010a;
        /**  menu on Game submenu: brings up dialog listing all tiles not
         yet played and not in the rack of the player whose rack is
         visible (whose turn it is, generally).  This display will
         change as tiles are used and depending on what player is
         asking. 
         */
        public static final int board_menu_game_left=0x7f060109;
        public static final int board_menu_game_netstats=0x7f060081;
        /**  Meaningful only for networked games, this menu causes all
         messages that have not yet been acknowledged by a remote
         device in the game to be resent.  Eventually I hope to be
         able to remove this from non-debug versions of the game
         because users should not have to do do this EVER. 
         */
        public static final int board_menu_game_resend=0x7f06010d;
        public static final int board_menu_game_resign=0x7f06010c;
        public static final int board_menu_invite=0x7f060286;
        /**   
         */
        public static final int board_menu_pass=0x7f0601ef;
        /**  This menu begins an exchange of tiles: puts the board into
         trade mode. 
         */
        public static final int board_menu_trade=0x7f060103;
        /**  hide and shows the tray.  On devices where there is enough
         room for the full board and tray to be shown then hiding the
         tray just "turns it over", i.e. shows tiles with '?'
         characters.
         */
        public static final int board_menu_tray_hide=0x7f060104;
        public static final int board_menu_tray_show=0x7f060105;
        /**   
         */
        public static final int board_menu_undo_current=0x7f060233;
        /**  Undos the last *committed* turn.  Note that this is different
         from the undo button that undoes or redoes an in-progress
         not-yet-committed turn.  This is disabled for networked
         games.
         */
        public static final int board_menu_undo_last=0x7f060106;
        /**  preference for board size (15x15, 13x13 etc.) 
         */
        public static final int board_size=0x7f060142;
        /**  Title of submenu 
         */
        public static final int board_submenu_game=0x7f060107;
        /**  The remaining strings (down to the color edit dialog below)
         are showns as the names of editable colors and as the the
         title of the color editor that comes up when the name is
         tapped. 
 (color for) double-letter bonus squares on the board 
         */
        public static final int bonus_l2x=0x7f060152;
        /**  Bonus value hint that's displayed in gray text in the colored
         bonus square. Double-letter 
         */
        public static final int bonus_l2x_summary=0x7f0600ed;
        /**  (color for) triple-letter bonus squares on the board 
         */
        public static final int bonus_l3x=0x7f060153;
        /**  Bonus value hint that's displayed in gray text in the colored
         bonus square. Triple-letter 
         */
        public static final int bonus_l3x_summary=0x7f0600ef;
        /**  (color for) double-word squares on the board 
         */
        public static final int bonus_w2x=0x7f060154;
        /**  Bonus value hint that's displayed in gray text in the colored
         bonus square. Double-word 
         */
        public static final int bonus_w2x_summary=0x7f0600ee;
        /**  (color for) triple-word squares on the board 
         */
        public static final int bonus_w3x=0x7f060155;
        /**  Bonus value hint that's displayed in gray text in the colored
         bonus square. Triple-word 
         */
        public static final int bonus_w3x_summary=0x7f0600f0;
        /**   
         */
        public static final int bt_bad_proto_fmt=0x7f060211;
        /**  EXPLAIN ME 
         */
        public static final int bt_disabled=0x7f060181;
        /**   
         */
        public static final int bt_fail_fmt=0x7f060216;
        /**  EXPLAIN ME 
         */
        public static final int bt_networked_desc=0x7f060182;
        /**   
         */
        public static final int bt_pick_clear_button=0x7f060208;
        /**   
         */
        public static final int bt_pick_rescan_button=0x7f060207;
        /**   
         */
        public static final int bt_resend_fmt=0x7f060215;
        /**   
         */
        public static final int btname_label=0x7f060218;
        /**  text of button for adding new player to game 
         */
        public static final int button_add_player=0x7f0600c3;
        public static final int button_cancel=0x7f0601b8;
        /**  The only button available when the above message is displayed 
         */
        public static final int button_close_game=0x7f0601ac;
        public static final int button_decline=0x7f060262;
        /**   
         */
        public static final int button_default_both=0x7f0600b8;
        /**  These three strings are the text for three buttons giving
         choices in respose to the dialog launched in response to the
         dicts_item_select menu (see dicts_item_select above.) 
         */
        public static final int button_default_human=0x7f0600b6;
        /**   
         */
        public static final int button_default_robot=0x7f0600b7;
        /**  When you select the gamel_menu_delete_all menuitem or
         list_item_delete contextual menu, you are asked to confirm.
         This is the text of the first button ("Cancel" is the
         second).  
         */
        public static final int button_delete=0x7f060098;
        /**  Used for button in dialog put up with the relay says the
         remote partner of this game has deleted it.  Ok, meaning
         "don't discard", is the other option.  This same button is
         used as an option in the Game config dialog, where "Save" is
         the other option, for discarding changes that would otherwise
         reset a game. 
         */
        public static final int button_discard=0x7f0601bc;
        /**   
         */
        public static final int button_done=0x7f0601ec;
        /**   
         */
        public static final int button_done_fmt=0x7f0601ed;
        /**  Text of button displayed when downloading is an option 
         */
        public static final int button_download=0x7f0601af;
        public static final int button_go_settings=0x7f060288;
        public static final int button_html=0x7f060187;
        /**   
         */
        public static final int button_invite=0x7f060217;
        /**  text of button to juggle (randomly rearrange order of) players 
         */
        public static final int button_juggle_players=0x7f0600c4;
        /**  New strings that need to be documented and found a home
         above. 
         */
        public static final int button_lookup=0x7f0601e6;
        /**   
         */
        public static final int button_lookup_fmt=0x7f0601e8;
        public static final int button_lookup_study=0x7f0601e7;
        public static final int button_lookup_study_fmt=0x7f0601e9;
        /**   
         */
        public static final int button_move=0x7f0601f1;
        /**  What is \u200C? English strings are used as keys, so they all
         need to be unique.  This glyph is non-printing and of
         zero-width, so it should do the trick:
         http://en.wikipedia.org/wiki/Zero-width_non-joiner 
      

       ############################################################
       # :Screens:
       # Main screen (list of games)
       #
       # This is the first screen you see when you launch Crosswords
       ############################################################ 
      
 Text of menuitem in main games-list screen's menu 
         */
        public static final int button_new_game=0x7f06008d;
        /**  Games list screen menuitem text for creating a new group 
         */
        public static final int button_new_group=0x7f06008e;
        public static final int button_nfc=0x7f060188;
        public static final int button_no=0x7f0601ba;
        /**  Text for button in new-user-info dialog with title just
         above.  
         */
        public static final int button_notagain=0x7f0601c8;
        /** 
        ############################################################
        # Dialogs
        ############################################################ 
      
 Text for buttons at the bottom of dialogs.  These first are
      in many places.
         */
        public static final int button_ok=0x7f0601b7;
        public static final int button_reconnect=0x7f060278;
        /**  Button shown in game over dialog triggering creation of new
         game with the same players and parameters as the one that
         just ended. 
         */
        public static final int button_rematch=0x7f060277;
        /**  When you select the list_item_reset contextual menu, you are
          asked to confirm.  This is the text of the first button
          ("Cancel" is the second).  
         */
        public static final int button_reset=0x7f060099;
        /**  Used for a button when informing user that his attempt to
         connect to the relay failed because the room named does not
         exist.  (I believe this no longer occurs.) 
         */
        public static final int button_retry=0x7f0601bd;
        /** 
       ############################################################
       # :Menus:
       # Preferences screen menus
       #
       # There are two menuitems availble via the menu key from this
       # screen
       ############################################################
      
 text of first menu item.  Will revert all preferences to
         their default/original values 
         */
        public static final int button_revert_all=0x7f06012b;
        /**  Second menu item.  Reverts only the colors to their
         default/original values 
         */
        public static final int button_revert_colors=0x7f06012d;
        /**  Used in Game config dialog to confirm saving changes that reset a game 
         */
        public static final int button_save=0x7f0601bb;
        /**   
         */
        public static final int button_search=0x7f0601f2;
        /**   
         */
        public static final int button_sms_add=0x7f060224;
        /**  Text of button allowing user to choose to open with a
         different (but same-language wordlist) 
         */
        public static final int button_substdict=0x7f0601b0;
        /**  When an invitation is sent, the user gets to choose between
    plaintext and html formatting.  These two strings are shown in the
    two buttons in the dialog. 
         */
        public static final int button_text=0x7f060186;
        public static final int button_trade_cancel=0x7f0600eb;
        /** 
       ############################################################
       # :Screens:
       # Board screen
       #
       #
       # (an open game, with the 15x15 grid of # squares, letters
       # played etc., is displayed here)
       ############################################################
      
 Buttons shown at bottom when board is in exchange mode,
         i.e. after user has picked board_menu_trade menu item 
         */
        public static final int button_trade_commit=0x7f0600ea;
        public static final int button_yes=0x7f0601b9;
        public static final int cannot_delete_default_group_fmt=0x7f060274;
        public static final int change_group=0x7f06027b;
        /**  text of button in About Crosswords dialog summoning above
         dialog 
         */
        public static final int changes_button=0x7f0601e5;
        /**  text of dialog showing the set of changes made since the last
         release 
         */
        public static final int changes_title=0x7f0601e4;
        /**  Prefix for local messages 
         */
        public static final int chat_local_id=0x7f060191;
        /** 
       ############################################################
       # :Menus:
       # Chat messages screen menu
       ############################################################ 
      
 This is the only menu item in the chat screen.  Press it and
         all the chat messages are erased.  There is no effect on
         other devices in the game: no "clear chat" message is
         transmitted. 
         */
        public static final int chat_menu_clear=0x7f060194;
        /**  Prefix for remote messages 
         */
        public static final int chat_other_id=0x7f060192;
        /**  Text on the button that causes the contents of the
         message-composition field to be sent. 
         */
        public static final int chat_send=0x7f060193;
        /**  ############################################################
         # :Screens:
         # Chat screen
         #
         # Shown when the chat button is pressed from the Board screen
         # or when a chat message (as opposed to a move message) comes
         # in from the relay.  It displays a history of messages with
         # slightly different colored backgrounds and with prefixes to
         # indicate whether they are local or remote in origin.
         ############################################################
      
 title of the chat screen.  The name of the current game is
         substituted for %1$s. 
         */
        public static final int chat_title_fmt=0x7f060190;
        public static final int checkupdates_none_found=0x7f060251;
        /**  color of the "crosshairs", lines drawn vertically and
         horizontally through the square the user is currently
         touching in order to guide the fat-fingered (most of us) in
         operations that require accurately selecting a single square
         on the board.
         */
        public static final int clr_crosshairs=0x7f060156;
        /**   
         */
        public static final int confirm_clear=0x7f06022a;
        /**  text of confirmation dialog posted when the delete 'X' button
         beside the listing of a wordlist is tapped.  The name of the
         wordlist is substituted for %1$s.  Sometimes one of the two
         strings below is appended. 
         */
        public static final int confirm_delete_dict_fmt=0x7f0600b3;
        /**  Additional text appended to text confirm_delete_dictf in the
         wordlist delete confiration dialog in the case where the
         wordlist to be deleted is the last in its language.  The name
         of the language is substituted for %1$s. 
         */
        public static final int confirm_deleteonly_dicts_fmt=0x7f0600b4;
        /**  Text of confirmation dialog posted when list_item_reset menu
         is selected 
         */
        public static final int confirm_reset_fmt=0x7f0600ac;
        /**  Text of confirmation dialog for above 
         */
        public static final int confirm_revert_all=0x7f06012e;
        /**  Text of confirmation dialog for above 
         */
        public static final int confirm_revert_colors=0x7f06012c;
        /**  title of confirmation dialog put up when user has unlocked an
         in-progress game and wants to save changes (has hit the
         play button). 
         */
        public static final int confirm_save=0x7f0600dd;
        /**  title of above confirmation dialog 
         */
        public static final int confirm_save_title=0x7f0600de;
        public static final int confirm_seldeletes_fmt=0x7f0600ab;
        /**   
         */
        public static final int confirm_sms_expl=0x7f06024a;
        /**   
         */
        public static final int confirm_sms_leave=0x7f06024c;
        /**   
         */
        public static final int confirm_sms_prompt=0x7f06024b;
        /**   
         */
        public static final int confirm_sms_title=0x7f060249;
        /**   
         */
        public static final int confirm_sms_unlimited=0x7f06024d;
        /**   
         */
        public static final int confirm_sms_willpay=0x7f06024e;
        public static final int confirm_studylist_clear_fmt=0x7f060295;
        /**  text of dialog shown when the menu item board_menu_undo_last
         is chosen. 
         */
        public static final int confirm_undo_last=0x7f060129;
        public static final int connect_daily=0x7f060175;
        public static final int connect_fifteen_mins=0x7f060171;
        public static final int connect_five_mins=0x7f060170;
        /**        
       ############################################################
       # :Screens:
       # Network game settings preference subscreen (within
       # Preferences screen)
       ############################################################
      
 When there are networked games connecting using the relay,
         Crosswords wakes up periodically to check if there are any
         new moves available and fetches them.  This controls how
         frequently that check is done. 
         */
        public static final int connect_frequency=0x7f06016e;
        /**  text of separator marking out the connection area of the dialog 
         */
        public static final int connect_label_relay=0x7f0600c7;
        /**   
         */
        public static final int connect_label_sms=0x7f06022c;
        /**  These are the possible values for the connect_frequency
         setting presented as a drop-down list. 
         */
        public static final int connect_never=0x7f06016f;
        public static final int connect_one_hour=0x7f060173;
        public static final int connect_six_hours=0x7f060174;
        public static final int connect_thirty_mins=0x7f060172;
        /**   
         */
        public static final int connstat_bt=0x7f060246;
        /**   
         */
        public static final int connstat_lastother_succ_fmt=0x7f060240;
        /**   
         */
        public static final int connstat_lastother_unsucc_fmt=0x7f060241;
        /**   
         */
        public static final int connstat_lastreceipt_fmt=0x7f060242;
        /**   
         */
        public static final int connstat_lastsend_fmt=0x7f06023f;
        /**   
         */
        public static final int connstat_net_fmt=0x7f06023c;
        /**   
         */
        public static final int connstat_nonet=0x7f06023b;
        /**   
         */
        public static final int connstat_noreceipt=0x7f060243;
        /**   
         */
        public static final int connstat_relay=0x7f060244;
        /**   
         */
        public static final int connstat_sms=0x7f060245;
        /**   
         */
        public static final int connstat_succ=0x7f06023d;
        /**   
         */
        public static final int connstat_unsucc=0x7f06023e;
        /**  title of dialog brought up in response to the
         board_menu_game_counts menu.  The dialog lists all tiles in
         the language being used for the game together with how many
         of each there are are and how many points each is worth. 
         */
        public static final int counts_values_title=0x7f0601c2;
        public static final int cur_menu_marker_fmt=0x7f060285;
        /**   
         */
        public static final int cur_tiles_fmt=0x7f0601f6;
        public static final int data_gsm_only=0x7f0602a7;
        public static final int debug_features=0x7f06007d;
        public static final int debug_features_summary=0x7f06007e;
        /**  dictionary used by default for human players when creating
         new game 
         */
        public static final int default_dict=0x7f06013a;
        /**  other 
         */
        public static final int default_host=0x7f06006b;
        public static final int default_loc=0x7f060265;
        public static final int default_loc_summary=0x7f060266;
        /**  Welcome dialog text 
         */
        public static final int default_name_message=0x7f0601de;
        /** 
       ###########################################################
       # :Dialogs:
       # Welcome dialog
       # 
       # Shown the first time a user launches Crosswords (and
       # again only if the preference for default first user
       # name is cleared).  Its purpose is to encourage him to
       # enter the name of the most common non-robot player on
       # this device.
       ###########################################################
      
 Welcome dialog title 
         */
        public static final int default_name_title=0x7f0601dd;
        /**  default new-game setting for handline phonies (words not
         found in the word list) 
         */
        public static final int default_phonies=0x7f060140;
        /**  dictionary used by default for robot players when creating
         new game 
         */
        public static final int default_robodict=0x7f06013b;
        public static final int default_update_url=0x7f060075;
        public static final int delete_dicts=0x7f0602b9;
        /**   
         */
        public static final int dft_name_fmt=0x7f06021c;
        /**   
         */
        public static final int dft_sms_name_fmt=0x7f060220;
        /**   
         */
        public static final int dict_browse_nowords_fmt=0x7f0601fa;
        /**   
         */
        public static final int dict_browse_title1_fmt=0x7f0601f9;
        /**   
         */
        public static final int dict_browse_title_fmt=0x7f0601f8;
        public static final int dict_host=0x7f06007a;
        public static final int dict_info_fmt=0x7f0602bd;
        /**  label for dropdown by which wordlist is chosen that this
         player will use.  The language the game will use (which
         constrains the choice of wordlists) is substituted in for
         "%1$s". 
         */
        public static final int dict_lang_label_fmt=0x7f0600e6;
        public static final int dict_on_server=0x7f0602bf;
        /** string name="invite_mime">text/plain</string
         */
        public static final int dict_url=0x7f060073;
        /** 
       ############################################################
       # :Menus:
       # Wordlists screen menus
       ############################################################ 
      
 title of contextual menu item.  If chosen it brings up a
         dialog that offers to move the selected wordlist from its
         current storage location to the other.  This menuitem is
         hidden if the selected wordlist is built in or if there is
         only one possible storage location, e.g. if the device has no
         SD card slot. 
         */
        public static final int dicts_item_move=0x7f0600b1;
        /**  Title of contextual menu item.  If chosen it brings up a
         dialog that sets the selected dictionary as a new-game
         default for robots or human players or both. (See
         key_default_dict and key_default_robodict.) 
         */
        public static final int dicts_item_select=0x7f0600b2;
        /**  If the dropdown is selected, this is the title displayed
         above the list of selectable items.  The language the game
         will use is substituted in for "%1$s". 
         */
        public static final int dicts_list_prompt_fmt=0x7f0600e7;
        /**  text of item at bottom of dicts choice spinner.  It
         launches the browser pointed at the site where additional
         wordlists can be found. 
         */
        public static final int download_dicts=0x7f0600ae;
        public static final int download_done=0x7f060263;
        public static final int download_failed=0x7f060264;
        public static final int download_path_title=0x7f060267;
        public static final int downloading_dict_fmt=0x7f0601a9;
        /**  <string name="summary_thumb_enabled">Display snapshots of games</string> 
         */
        public static final int dropped_dupe=0x7f060284;
        /**  Shown in the main screen when you launch Crosswords from an
         invitation (received in email or messaging app, say) and
         there's already a game running that matches that invitation.
         It's to prevent you from opening multiple games and getting
         confused.  But some people who play together all the time use
         the same room name over and over so they'll get this warning
         and it's harmless to ignore it. 
         */
        public static final int dup_game_query_fmt=0x7f0601be;
        /**   
         */
        public static final int email_author_chooser=0x7f060204;
        /**  Nor is my email address 
         */
        public static final int email_author_email=0x7f06006a;
        /**   
         */
        public static final int email_author_subject=0x7f060203;
        /**   
         */
        public static final int email_body_rev_fmt=0x7f060205;
        /**  color of empty squares on the board (that are not bonus squares) 
         */
        public static final int empty=0x7f060158;
        /**   
         */
        public static final int empty_sms_inviter=0x7f060228;
        public static final int enable_dupes_summary=0x7f06008b;
        public static final int enable_dupes_title=0x7f060089;
        public static final int enable_nfc=0x7f060287;
        /**   
         */
        public static final int enable_sms=0x7f060247;
        /**   
         */
        public static final int enable_sms_summary=0x7f060248;
        public static final int entering_trade=0x7f0600ec;
        public static final int expl_update_url=0x7f060074;
        /**  These four strings are displayed as step-by-step
         instructions
         */
        public static final int explain_b1=0x7f060196;
        public static final int explain_b2=0x7f060197;
        public static final int explain_b3=0x7f060198;
        public static final int explain_b4=0x7f060199;
        /**  if this preference is checked, a dialog will be posted every
         time a robot makes a move or a move is received from a remote
         player. 
         */
        public static final int explain_robot=0x7f060160;
        /**  explanation of the above 
         */
        public static final int explain_robot_summary=0x7f060161;
        /**  title of dialog brought up in response to the
         board_menu_game_final menu.  The dialog displays the final
         score and an accounting of it (including subtractions for
         running out the game timer if there is one.)
     
         */
        public static final int finalscores_title=0x7f0601c4;
        /**  Explanatory text appears in the dialog 
         */
        public static final int force_expl=0x7f0600e1;
        public static final int force_tablet_summary=0x7f0602c4;
        public static final int force_tablet_title=0x7f0602c3;
        /**      
       ############################################################
       # :Dialogs:
       # Force remote dialog
       #

       # This alert dialog comes up when you're it the player edit
       # dialog for a networked game and try to exit with none of the
       # players configured as a remote player.  It forces you to mark
       # one of them (or marks one itself if you cancel it.)
       ############################################################
       
 title of this dialog 
         */
        public static final int force_title=0x7f0600e0;
        /**  Displayed as a "Toast" (mini window briefly displayed) if you
       didn't choose a remote player and I was forced to pick one. I
       always pick the first. 
         */
        public static final int forced_consistent=0x7f0600e2;
        /**  Games that have ended are listed with this string 
         */
        public static final int gameOver=0x7f060096;
        /**   
         */
        public static final int game_btname_title=0x7f06021a;
        /**  used to create default names of games (when user has not
         named them.) 
         */
        public static final int game_fmt=0x7f0601b3;
        /**  
       ############################################################
       # :Menus:
       # Context menu for main games-list screen
       ############################################################ 
      
 title of contextual menu.  Name of the selected game is
         substituted in. 
         */
        public static final int game_item_menu_title_fmt=0x7f0600a0;
        /**   
         */
        public static final int game_list_tmp=0x7f06023a;
        /**  text of checkbox at top of dialog allowing to unlock in-play
    game to make changes 
         */
        public static final int game_locked=0x7f0600c0;
        public static final int game_name_group_title=0x7f060273;
        /**   
         */
        public static final int game_rename_title=0x7f0600a9;
        /**   
         */
        public static final int game_smsname_title=0x7f06021b;
        /**  Put nothing in the summary space, so it just reads "Game 2" 
         */
        public static final int game_summary_field_empty=0x7f060146;
        public static final int game_summary_field_gameid=0x7f060071;
        /**  Put the language there, so it reads "Game 2 (English)" 
         */
        public static final int game_summary_field_language=0x7f060147;
        public static final int game_summary_field_npackets=0x7f060072;
        /**  List names of opponents (summarized), e.g. "Game 2 (vs Kati)" 
         */
        public static final int game_summary_field_opponents=0x7f060148;
        public static final int game_summary_field_rowid=0x7f060070;
        /**  List the state of the game, "Game over" or "10 moves made"
         etc. 
         */
        public static final int game_summary_field_state=0x7f060149;
        /**  Regardless of the setting of the connect_frequency
         preference, checks the relay immediately for any moves for
         networked games on this device and posts a notification if
         any is downloaded. 
         */
        public static final int gamel_menu_checkmoves=0x7f06009c;
        /**   
         */
        public static final int gamel_menu_checkupdates=0x7f060250;
        /**     
       ############################################################
       # :Menus:
       # Main screen (Games list) menu
       #
       # One menu is not listed here because it appears elsewhere
       # and their text is reused: button_new_game.
       ############################################################ 
      
 Brings up the Wordlists (formerly Dictionaries) screen 
         */
        public static final int gamel_menu_dicts=0x7f06009a;
        public static final int gamel_menu_loaddb=0x7f060088;
        public static final int gamel_menu_storedb=0x7f060087;
        public static final int gamel_menu_study=0x7f060292;
        /**   
         */
        public static final int get_sms_number=0x7f060229;
        public static final int getinfo=0x7f0602b8;
        public static final int git_rev=0x7f06008c;
        public static final int git_rev_title=0x7f060083;
        public static final int green=0x7f06015c;
        public static final int group_cur_games=0x7f06026e;
        public static final int group_name_fmt=0x7f060276;
        public static final int group_new_games=0x7f06026f;
        public static final int groups_confirm_del_fmt=0x7f060270;
        public static final int groups_confirm_del_games_fmt=0x7f060271;
        /**  Used as the default name for remote players displayed within
         the Game configure screen 
         */
        public static final int guest_name=0x7f0600dc;
        /**  If this preference is checked the "crosshairs" (vertical and
         horzontal lines through the cell your finger is on that help
         you tell where the app thinks you're actually tapping) will
         not be shown.  Some users have complained that this feature
         is distracting, presumably because they're using tablets with
         large enough screens that they always know where they're
         tapping. 
         */
        public static final int hide_crosshairs=0x7f06016a;
        /**  explanation of the above 
         */
        public static final int hide_crosshairs_summary=0x7f06016b;
        /**  Checkbox that when set prevents showing a title bar in the
         game board window to save space 
         */
        public static final int hide_title=0x7f06014a;
        /**  clarification of above 
         */
        public static final int hide_title_summary=0x7f06014b;
        /**  text of checkbox.  If this checkbox is checked, buttons will
         appear by which the user can get high- and low-scoring moves
         generated based on his tray.  Can be used to cheat.  
         */
        public static final int hints_allowed=0x7f0600cf;
        /**  clarification on hints_allowed, whether new games will
         default to having the hint feature enabled(string elsewhere
         in this file) 
         */
        public static final int hints_allowed_sum=0x7f06013c;
        /**  title of dialog brought up in response to the
         board_menu_game_history menu.  A full history of the game up
         to the last turn is displayed, though details about what's in
         players' racks is left out if the game is not yet over. 
         */
        public static final int history_title=0x7f0601c3;
        /**  Partial text of alert posted when phonies_warn or
         phonies_disallow is the current setting and a "phony" is
         played.  One of the two following strings will be appended
         
         */
        public static final int ids_badwords_fmt=0x7f0600fe;
        /**  text of confirmation dialog shown when user chooses the menu
         item with text board_menu_game_final and the game is not over
         
         */
        public static final int ids_endnow=0x7f0601c5;
        /**  Title of generic dialog used to display information 
         */
        public static final int info_title=0x7f0601bf;
        /**   
         */
        public static final int inform_dict_diffdict_fmt=0x7f06025a;
        /**   
         */
        public static final int inform_dict_diffversion_fmt=0x7f060258;
        public static final int inform_dict_download=0x7f06025b;
        public static final int inform_dict_title=0x7f060259;
        /**  Will new games, on default, randomly rearrange the start
         order of players. 
         */
        public static final int init_autojuggle=0x7f06013e;
        /**  clarification on above 
         */
        public static final int init_autojuggle_sum=0x7f06013f;
        /**  default number of minutes on timer for new games 
         */
        public static final int initial_player_minutes=0x7f060141;
        /**   
         */
        public static final int invite_bt_desc_fmt=0x7f060214;
        public static final int invite_chooser_email=0x7f06018d;
        /**  When I've created the invitation, in text or html, I ask
         Android to launch an app that can send it, typically an email
         or messaging app.  Android then asks the user to choose which
         of the installed apps that can process the request he'd like
         to have launched.  This string is passed to Android and used
         as the title of the dialog that presents that choice. 
         */
        public static final int invite_chooser_fmt=0x7f06018c;
        public static final int invite_chooser_sms=0x7f06018e;
        public static final int invite_dict_missing_body_fmt=0x7f060260;
        public static final int invite_dict_missing_body_noname_fmt=0x7f060261;
        public static final int invite_dict_missing_title=0x7f06025f;
        public static final int invite_host=0x7f06006d;
        /**  This is the body of the html version of the invitation. A URL
         is created with parameters describing the game and
         substituted for "%1$s".  (The funky \u003c and friends are
         encodings for the greater-than and less-than symbols which
         are not legal in xml strings.)
         */
        public static final int invite_htm_fmt=0x7f06018a;
        public static final int invite_mime=0x7f06006f;
        /**  If a networked game is opened and is not complete, i.e. if it
         is listed as expecting remote players who have not yet shown
         up, then the most likely explanation is that none has been
         invited.  (It's also possible that an invitation has been
         sent, but I have no way of knowing that.) So every time I
         open such a game I give the user a chance to issue an
         invititation while trying to warn him not to send duplicates.
         The number of players missing is substituted for "%1$d". 
         */
        public static final int invite_msg_fmt=0x7f0600f2;
        /**  Most users create games with only two players, which is the
         default, but Crosswords supports up to four.  When I'm using
         the above string to encourage the opener of a game missing
         players to invite, IF the number of missing players is
         greater than one this text is appended to the above. 
         */
        public static final int invite_multiple=0x7f0600f4;
        public static final int invite_prefix=0x7f06006e;
        /**   
         */
        public static final int invite_progress=0x7f06020a;
        /**   
         */
        public static final int invite_sms_desc_fmt=0x7f060225;
        /**  This is the subject line of the email/text sent to invite
         someone to join a game. 
         */
        public static final int invite_subject_fmt=0x7f060189;
        /**   
         */
        public static final int invite_success=0x7f06022b;
        /**  This is the body of the text version of the invitation. A URL
         is created with parameters describing the game and
         substituted for "%1$s".
         */
        public static final int invite_txt_fmt=0x7f06018b;
        /**  text of checkbox asking if user wants to search for open
    public rooms 
         */
        public static final int join_room=0x7f0600c8;
        /**  Checkbox that when set keeps the device screen from dimming
         if the board screen is what's displayed.  This is to allow
         users to think about a move without having to touch the
         screen all the time.
         */
        public static final int keep_screenon=0x7f06014e;
        /**  clarification of above 
         */
        public static final int keep_screenon_summary=0x7f06014f;
        public static final int key_background=0x7f060017;
        public static final int key_board_size=0x7f060027;
        public static final int key_bonus_l2x=0x7f060011;
        public static final int key_bonus_l3x=0x7f060012;
        public static final int key_bonus_w2x=0x7f060013;
        public static final int key_bonus_w3x=0x7f060014;
        /**  the color of text, e.g. "2L", shown on a bonus square on the
         board 
         */
        public static final int key_bonushint=0x7f06015a;
        public static final int key_bt_addrs=0x7f06003d;
        public static final int key_bt_names=0x7f06003c;
        public static final int key_checked_sms=0x7f060044;
        /**  database keys whose entries aren't visible prefs 
         */
        public static final int key_closed_langs=0x7f06003b;
        public static final int key_clr_bonushint=0x7f060019;
        public static final int key_clr_crosshairs=0x7f060018;
        /**  prefs keys 
         */
        public static final int key_color_tiles=0x7f060002;
        public static final int key_connect_frequency=0x7f060031;
        public static final int key_connstat_data=0x7f06003f;
        public static final int key_default_dict=0x7f060029;
        public static final int key_default_group=0x7f060045;
        public static final int key_default_loc=0x7f060039;
        public static final int key_default_phonies=0x7f06002f;
        public static final int key_default_robodict=0x7f06002e;
        public static final int key_default_timerenabled=0x7f060030;
        public static final int key_dev_id=0x7f060040;
        public static final int key_dict_host=0x7f060020;
        public static final int key_download_path=0x7f060067;
        public static final int key_empty=0x7f060016;
        public static final int key_enable_debug=0x7f060065;
        public static final int key_enable_dup_invite=0x7f060066;
        public static final int key_enable_sms=0x7f060034;
        public static final int key_explain_robot=0x7f060005;
        public static final int key_force_tablet=0x7f06003a;
        public static final int key_gcmvers_regid=0x7f060041;
        public static final int key_group_posns=0x7f060046;
        public static final int key_hide_crosshairs=0x7f060009;
        public static final int key_hide_title=0x7f06000c;
        public static final int key_hide_values=0x7f06000a;
        public static final int key_init_autojuggle=0x7f060026;
        public static final int key_init_hintsallowed=0x7f060024;
        public static final int key_init_nethintsallowed=0x7f060025;
        public static final int key_initial_player_minutes=0x7f060028;
        public static final int key_keep_screenon=0x7f060035;
        public static final int key_last_packet=0x7f060047;
        public static final int key_logging_on=0x7f060021;
        public static final int key_na_browse=0x7f06005f;
        public static final int key_na_browseall=0x7f060060;
        public static final int key_na_dicts=0x7f060064;
        public static final int key_na_fmt_expl=0x7f060063;
        public static final int key_na_lookup=0x7f06005e;
        public static final int key_na_studycopy=0x7f060062;
        public static final int key_na_values=0x7f060061;
        public static final int key_notagain_arrow=0x7f06005a;
        public static final int key_notagain_backclears=0x7f06004c;
        public static final int key_notagain_chat=0x7f06004d;
        public static final int key_notagain_conndall=0x7f060057;
        public static final int key_notagain_conndfirst=0x7f060058;
        public static final int key_notagain_conndmid=0x7f060059;
        public static final int key_notagain_done=0x7f060055;
        public static final int key_notagain_flip=0x7f060052;
        public static final int key_notagain_hintnext=0x7f060050;
        public static final int key_notagain_hintprev=0x7f06004f;
        public static final int key_notagain_juggle=0x7f060051;
        public static final int key_notagain_newfrom=0x7f06005c;
        public static final int key_notagain_newselect=0x7f06004b;
        public static final int key_notagain_relay=0x7f06004e;
        public static final int key_notagain_sms_ready=0x7f06004a;
        public static final int key_notagain_sync=0x7f060049;
        public static final int key_notagain_trading=0x7f06005d;
        public static final int key_notagain_turnchanged=0x7f06005b;
        public static final int key_notagain_undo=0x7f060054;
        public static final int key_notagain_unlock=0x7f060056;
        public static final int key_notagain_zoom=0x7f060053;
        public static final int key_notify_sound=0x7f060032;
        public static final int key_notify_vibrate=0x7f060033;
        public static final int key_peek_other=0x7f060008;
        public static final int key_player0=0x7f06000d;
        public static final int key_player1=0x7f06000e;
        public static final int key_player1_name=0x7f06002a;
        public static final int key_player2=0x7f06000f;
        public static final int key_player2_name=0x7f06002b;
        public static final int key_player3=0x7f060010;
        public static final int key_player3_name=0x7f06002c;
        public static final int key_player4_name=0x7f06002d;
        public static final int key_proxy_port=0x7f06001e;
        public static final int key_relay_host=0x7f06001a;
        public static final int key_relay_port=0x7f06001b;
        public static final int key_relay_regid=0x7f060042;
        public static final int key_relay_regid_ackd=0x7f060043;
        public static final int key_ringer_zoom=0x7f06000b;
        public static final int key_send_data_sms=0x7f060023;
        public static final int key_show_arrow=0x7f060003;
        public static final int key_show_sms=0x7f060022;
        public static final int key_skip_confirm=0x7f060006;
        public static final int key_sms_phones=0x7f06003e;
        public static final int key_sms_port=0x7f06001f;
        public static final int key_sort_tiles=0x7f060007;
        public static final int key_square_tiles=0x7f060004;
        public static final int key_studyon=0x7f060037;
        public static final int key_summary_field=0x7f060038;
        public static final int key_thumbsize=0x7f060036;
        public static final int key_tile_back=0x7f060015;
        public static final int key_udp_interval=0x7f060048;
        public static final int key_update_prerel=0x7f06001d;
        public static final int key_update_url=0x7f06001c;
        public static final int key_xlations_enabled=0x7f060069;
        public static final int key_xlations_locale=0x7f060068;
        /**  text of separator marking out the language area of the
         dialog.  First is used for single-device games, and second
         for networked games (where players aren't allowed to have
         different wordlists.) 
         */
        public static final int lang_label=0x7f0600c5;
        public static final int lang_name_fmt=0x7f0602c0;
        public static final int lang_unknown=0x7f0602c1;
        public static final int langdict_label=0x7f0600c6;
        public static final int list_group_default=0x7f06026b;
        public static final int list_group_delete=0x7f060269;
        public static final int list_group_movedown=0x7f06026d;
        public static final int list_group_moveup=0x7f06026c;
        public static final int list_group_rename=0x7f06026a;
        /**   ############## menu items ############## 
 pulls up dialog to configure the selected game 
         */
        public static final int list_item_config=0x7f0600a1;
        /**  makes a copy of the selected game.  This is currently
         disabled for networked games since there would be problems if
         two identically configured games started trying to talk to a
         remote game that expected there was only one of them. 
         */
        public static final int list_item_copy=0x7f0600a7;
        /**  pulls up dialog to delete the selected game 
         */
        public static final int list_item_delete=0x7f0600a4;
        /**  pulls up dialog to change the group of the selected game 
         */
        public static final int list_item_move=0x7f0600a3;
        /**  creates a new game with all configuation copied from the
         selected game 
         */
        public static final int list_item_new_from=0x7f0600a6;
        /**  pulls up dialog to rename (change name of) the selected game 
         */
        public static final int list_item_rename=0x7f0600a2;
        /**  pulls up dialog to reset the selected game, that is to remove
         all moves so that it's the same as a newly created game
         except for any configuration. 
         */
        public static final int list_item_reset=0x7f0600a5;
        /**  One of the strings used in the right column of the list of
         installed wordlists to describe those that are part of
         Crosswords and that cannot be uninstalled or moved.
         loc_internal and loc_external are the other possible strings
         in this column. 
         */
        public static final int loc_builtin=0x7f0600af;
        /**  Used to describe wordlists that are in the Downloads
         directory.  Currently I don't look there so this is unused,
         but I will eventually do so.  This should be the same name as
         the built-in Android web browser uses for the directory where
         it saves files it downloads. 
         */
        public static final int loc_downloads=0x7f0600b0;
        /**   
         */
        public static final int loc_external=0x7f0600bb;
        public static final int loc_filters_all=0x7f0602aa;
        public static final int loc_filters_menu=0x7f0602ac;
        public static final int loc_filters_modified=0x7f0602ad;
        public static final int loc_filters_prompt=0x7f0602a8;
        public static final int loc_filters_screen=0x7f0602ab;
        public static final int loc_fmts_mismatch=0x7f0602b3;
        /**  see move_dictf above 
         */
        public static final int loc_internal=0x7f0600ba;
        public static final int loc_item_check=0x7f0602b0;
        /**  for loc item edit menu 
         */
        public static final int loc_item_clear=0x7f0602af;
        public static final int loc_item_copy_bless=0x7f0602b2;
        public static final int loc_item_copy_eng=0x7f0602b1;
        public static final int loc_lang_blessed=0x7f0602a2;
        public static final int loc_lang_local=0x7f0602a3;
        public static final int loc_main_english=0x7f0602ae;
        public static final int loc_menu_xlate=0x7f0602a1;
        public static final int loc_search_prompt=0x7f0602a9;
        /**  This is the "hint" printed in light text in the empty player
         name field 
         */
        public static final int local_name_hint=0x7f06019a;
        public static final int logging_on=0x7f06007b;
        public static final int logging_on_summary=0x7f06007c;
        public static final int lookup_title=0x7f06029d;
        /**   
         */
        public static final int manual_owner_name=0x7f060226;
        /**   
         */
        public static final int max_len=0x7f0601ff;
        /**   
         */
        public static final int menu_chat=0x7f060237;
        /**   
         */
        public static final int menu_flip=0x7f060235;
        /**   
         */
        public static final int menu_hint_next=0x7f060232;
        /**   
         */
        public static final int menu_hint_prev=0x7f060231;
        /**   
         */
        public static final int menu_juggle=0x7f060234;
        /**  text of menu that brings up the Settings (preferences) dialog 
         */
        public static final int menu_prefs=0x7f06009b;
        public static final int menu_rateme=0x7f06028d;
        /**   
         */
        public static final int menu_toggle_values=0x7f060238;
        /**   
         */
        public static final int menu_zoom=0x7f060236;
        /**   
         */
        public static final int min_len=0x7f0601fe;
        /**  label for the field used to set the timer's inital value 
         */
        public static final int minutes_label=0x7f0600d2;
        public static final int missing_dict_detail=0x7f06025e;
        public static final int missing_dict_title=0x7f06025d;
        /**  Used as a substitute for the names of remote players when
         they aren't available yet because the connection is not
         complete.  Displayed in the lists of players found in each
         game listing. 
         */
        public static final int missing_player=0x7f060091;
        /**  When the dicts_item_move menu is chosen, this text is used in
         the confirmation dialog.  The name of the selected wordlist
         is substituted for %1$s.  The strings loc_internal and
         loc_internal are substitued for %2$s and %3$s (or vice-versa,
         depending on the current location of the wordlist.)
         */
        public static final int move_dict_fmt=0x7f0600b9;
        /**  Otherwise they're listed with this to give some indication of
         how far along they are.  I may list "tiles left" someday
         instead... 
         */
        public static final int moves_fmt=0x7f060097;
        /**  
       ############################################################
       # :Dialogs:
       # Password dialog
       # 

       # This alert is displayed when a local player has set a
       # password and is trying to see his tiles
       ############################################################
       
 Text of dialog.  Player name is substituted 
         */
        public static final int msg_ask_password_fmt=0x7f0601b2;
        /**  When a game has been connected and the relay is notified that
         a device in the game has deleted its part of the game, this
         message is posted when you connect your end of it to the
         relay.  Once this happens there is no way to continue the
         game so you might as well delete it (unless you're saving it
         for its history etc.) 
         */
        public static final int msg_dev_deleted=0x7f0600fd;
        /**  (I believe this can no longer occur) 
         */
        public static final int msg_dup_room=0x7f0600fb;
        /**  (I believe this can no longer occur) 
         */
        public static final int msg_lost_other=0x7f0600fc;
        /**  (I believe this can no longer occur) 
         */
        public static final int msg_no_room=0x7f0600fa;
        /**  Text of "toast" shown when a game is notified by the relay
         that all expected players have registered.  At this point
         play can begin. 
         */
        public static final int msg_relay_all_here_fmt=0x7f0600f7;
        /**  Text of "toast" (mini window briefly displayed) shown when a
         game first connects to the relay.  The three substitutions
         are the device's order within the game (e.g. 2), the name of
         the room, and how many additional players have not yet
         registered with the relay in this game.  This should be seen
         only once per game. 
         */
        public static final int msg_relay_waiting_fmt=0x7f0600f6;
        /**  (I believe this can no longer occur) 
         */
        public static final int msg_too_many=0x7f0600f9;
        /**  Text of progress indicator shown while check is being conducted 
         */
        public static final int msgs_progress=0x7f06009d;
        /**  body of warning notification reminder message 
         */
        public static final int nag_body_fmt=0x7f0602c6;
        /**  Nagging: title of notification reminder message 
         */
        public static final int nag_title=0x7f0602c5;
        /**  above is inserted in this the last time I warn 
         */
        public static final int nag_warn_last_fmt=0x7f0602c7;
        public static final int name_dict_fmt=0x7f060086;
        /**  text of checkbox.  If this checkbox is checked, games created
         for network play will by default have the hint feature
         enabled. 
         */
        public static final int nethints_allowed=0x7f0600d0;
        /**  clarification on hints_allowed, whether new NETWORKED games
         will default to having the hint feature enabled(string
         elsewhere in this file) 
         */
        public static final int nethints_allowed_sum=0x7f06013d;
        public static final int netstats_title=0x7f060082;
        public static final int network_behavior=0x7f06016c;
        /**  explanation of the above 
         */
        public static final int network_behavior_summary=0x7f06016d;
        /**   
         */
        public static final int new_app_avail=0x7f060255;
        /**   
         */
        public static final int new_app_avail_fmt=0x7f060254;
        /**   
         */
        public static final int new_bt_body_fmt=0x7f060210;
        /**   
         */
        public static final int new_bt_title=0x7f06020f;
        /**   
         */
        public static final int new_btmove_title=0x7f060212;
        /**   
         */
        public static final int new_dict_avail=0x7f060252;
        /**   
         */
        public static final int new_dict_avail_fmt=0x7f060253;
        /**   
         */
        public static final int new_move_body=0x7f060213;
        /**   
         */
        public static final int new_name_body_fmt=0x7f060222;
        /**  hint (text shown when field is empty) for room name field 
         */
        public static final int new_room_hint=0x7f0600c9;
        /**   
         */
        public static final int new_sms_title=0x7f060221;
        /**   
         */
        public static final int new_smsmove_title=0x7f060223;
        public static final int new_xlations_fmt=0x7f0602a4;
        /** 
       ###########################################################
       # :Dialogs:
       # New user info dialog
       # 
       # This dialog pops up in places I think new users need an
       # explanation of something.  It always has a button allowing
       # the user to say he doesn't need to see it again.
       ########################################################### 
      
 Title of New user info dialog
         */
        public static final int newbie_title=0x7f0601c7;
        /**  section separator (white-on-gray bar) for third section:
         bluetooth games 
         */
        public static final int newgame_bt_header=0x7f060180;
        /**  Text of second of two buttons for new standalone games.  Tap
    this and you'll get taken to the "Game configure" screen 
         */
        public static final int newgame_configure_first=0x7f06017c;
        public static final int newgame_enable_bt=0x7f060206;
        /**  Text of first of two buttons for new networked games.  Tap
         this and a game will be created, but you probably won't see
         it immediately because an email or messaging app will be
         launched to send your invitation. 
         */
        public static final int newgame_invite=0x7f06017f;
        /**  Text of first of two buttons for new standalone games.  Tap
         this and a new game will be created and opened.  If the first
         player is a robot it will immediately take its turn.
         */
        public static final int newgame_local=0x7f06017b;
        /**  This is one of two descriptions on this screen.  It explains
         what standalone games are and describes the two buttons used
         to create them.  The name of the language of the default
         wordlist is substituted in for %1$s. 
         */
        public static final int newgame_local_desc_fmt=0x7f06017a;
        /**  ############################################################
         # :Screens:
         # New game screen
         #
         # This comes up when you tap the "new game" button on the
         # main screen or the new game menuitem in the main screen's
         # menu.  It has descriptions and buttons for creating the two
         # types of supported games, standalone and networked.
         ############################################################
      
 section separator (white-on-gray bar) for first section:
         standalone games 
         */
        public static final int newgame_local_header=0x7f060179;
        /**  This is the second of two descriptions on this screen.  It
         explains what networked games are and describes the two
         buttons used to create them. 
         */
        public static final int newgame_networked_desc=0x7f06017e;
        /**  section separator (white-on-gray bar) for second section:
         networked games 
         */
        public static final int newgame_networked_header=0x7f06017d;
        /**   
         */
        public static final int newgame_sms_header=0x7f06021d;
        public static final int newgroup_label=0x7f060268;
        public static final int nfc_or_email=0x7f060184;
        public static final int nfc_or_sms_or_email=0x7f060185;
        /**  Title of dialog for renaming game (triggered by selecting
         list_item_rename) 
 If you try to copy a networked game you get this error
    message. 
         */
        public static final int no_copy_network=0x7f0600a8;
        /**  If the wordlist disappears mid-game there are no choices,
         just an explanation and this button, after which the game
         closes. 
         */
        public static final int no_dict_finish=0x7f0601ab;
        /**  If the missing wordlist is discovered when trying to open the
         game, we have more options.  If there's another wordlist in
         the same language, we can offer to substitute without needing
         to download.  Otherwise the user must choose between
         downloading and not opening the game.  This first message
         takes wordlist name and language substituted in for %1$ and
         %2$ 
         */
        public static final int no_dict_fmt=0x7f0601ad;
        /**  This is an alternative message presented when there's also
         the option of downloading another wordlist.  Game name,
         wordlist name and language are substituted in. 
         */
        public static final int no_dict_subst_fmt=0x7f0601ae;
        /**  
       ############################################################
       # :Dialogs:
       # Missing wordlist alert
       # 
       # This alert is displayed when you try to open a game whose
       # wordlist cannot be found.
       ############################################################
      
 title of alert 
         */
        public static final int no_dict_title=0x7f0601aa;
        /**  If you click on the Play button without having entered a room
         name you get an alert with this error message. 
         */
        public static final int no_empty_rooms=0x7f06019c;
        /**  If you choose the above option and have no networked games
         you get this error message 
         */
        public static final int no_games_to_refresh=0x7f06009e;
        public static final int no_hide_titlebar=0x7f060289;
        public static final int no_market=0x7f06028e;
        public static final int no_move_onegroup=0x7f060275;
        /**  displayed when you long-tap a scoreboard entry and there's no
         most recent score to show 
         */
        public static final int no_moves_made=0x7f0600f1;
        /**  If the query returns no rooms, this message is displayed,
    with the number of players in the game and its language
    substituted. 
         */
        public static final int no_name_found_fmt=0x7f0600cd;
        /**  This is not currently shown 
 <string name="not_again_dicts">Crosswords wordlists, which are 
   just compressed lists of words plus tile information, determine 
   what language a game is played in and how \"smart\" the robot 
   is.  You can download different sized wordlists in many 
   languages here.  Email me at eehouse@eehouse.org for information 
   on building and installing your own wordlists.</string> 
 Shown the first time the board arrow is drawn on the current
         Board screen.  The idea is that you're tapping around
         figuring out how to play and when you tap an empty cell the
         arrow appears.  This explains it. 
         */
        public static final int not_again_arrow=0x7f0601da;
        public static final int not_again_backclears=0x7f06027f;
        /**   
         */
        public static final int not_again_browse=0x7f0601fb;
        /**   
         */
        public static final int not_again_browseall=0x7f0601fc;
        /**  Shown when you tap the chat button on the toolbar of the
         main Board screen 
         */
        public static final int not_again_chat=0x7f0601d3;
        /**  This is shown in the Board screen when you successfully
         connecting a game to the relay and are the last device in the
         game to do so, i.e. the game is now complete and you should
         expect play to begin. 
         */
        public static final int not_again_conndall=0x7f0601d9;
        /**  This is shown in the Board screen when you successfully
         connect a game to the relay and are the first device in the
         game to do so. 
         */
        public static final int not_again_conndfirst=0x7f0601d7;
        /**  This is shown in the Board screen when you successfully
         connecting a game to the relay and are not the first device
         in the game but not the last either.  So it will only occur
         for games with more than two devices, which are rare. 
         */
        public static final int not_again_conndmid=0x7f0601d8;
        public static final int not_again_dicts=0x7f0602c2;
        /**  This is shown when you choose the board_menu_done menu item.
         It's to let you know that there's a shortcut that does almost
         the same thing. 
         */
        public static final int not_again_done=0x7f0601d5;
        /**  Shown when you tap the flip button on the toolbar of the main
         Board screen 
         */
        public static final int not_again_flip=0x7f0601d0;
        public static final int not_again_fmt_expl=0x7f0602b4;
        /**  Shown when you tap the next hint button on the toolbar of the
         main Board screen 
         */
        public static final int not_again_hintnext=0x7f0601ce;
        /**  Currently not used 
 <string name="not_again_newgame">The new game you have created has 
   two players. Player 1 is a robot; Player 2 is you. Tap the game 
   to play; long-tap (hold your finger on the game) to change its 
   settings or for other options.</string> 
 Shown when you tap the Previous Hint button on the toolbar of
         the main Board screen 
         */
        public static final int not_again_hintprev=0x7f0601cd;
        /**  Shown when you tap the juggle button on the toolbar of the
         main Board screen 
         */
        public static final int not_again_juggle=0x7f0601cf;
        /**   
         */
        public static final int not_again_lookup=0x7f0601f0;
        /**  Shown when you first pick the list_item_new_from menuitem 
         */
        public static final int not_again_newfrom=0x7f0601dc;
        public static final int not_again_newselect=0x7f06027e;
        public static final int not_again_sms_ready=0x7f06028b;
        public static final int not_again_studycopy=0x7f06029c;
        /**  The following strings (all whose names start with
         "not_again") appear in the New user info dialog.
      
 shown when user chooses the gamel_menu_checkmoves menu 
         */
        public static final int not_again_sync=0x7f0601c9;
        /**  Shown when the user chooses the "board_menu_trade" menu 
         */
        public static final int not_again_trading=0x7f0601ca;
        public static final int not_again_trading_buttons=0x7f0601cb;
        public static final int not_again_trading_menu=0x7f0601cc;
        /**  Shown when the board screen is visible and it's just become
         another players turn. The idea is to give a hint about how to
         find out about recent moves. 
         */
        public static final int not_again_turnchanged=0x7f0601db;
        /**  Shown when you tap the undo/redo button on the toolbar of the
         main Board screen 
         */
        public static final int not_again_undo=0x7f0601d2;
        /**  Shown in the Game configure screen when the game_locked
         checkbox is checked and you uncheck it.  
         */
        public static final int not_again_unlock=0x7f0601d6;
        /**  Shown when you tap the values button on the toolbar of the
         main Board screen.  This is intended to allow players to
         remind themselves how much played tiles are worth while
         planning a move. 
         */
        public static final int not_again_values=0x7f0601d4;
        /**  Shown when you tap the zoom (+/-) button on the toolbar of
         the main Board screen 
         */
        public static final int not_again_zoom=0x7f0601d1;
        public static final int note_none=0x7f0602be;
        public static final int notify_body_fmt=0x7f0601b6;
        /**  This text is displayed as the "summary" for both of the
         notify choices above, as extra information.  (There could be
         different strings if it makes more sense in your language.)
         
         */
        public static final int notify_other_summary=0x7f060178;
        /**  When one or more new moves is found, should I play a
         notification sound 
         */
        public static final int notify_sound=0x7f060176;
        /**  When a move is fetched from the relay a Notification is
    posted.  These are its title, which appears in the top bar of the
    device, and the body that appears when you pull the notifications
    down. 
         */
        public static final int notify_title=0x7f0601b5;
        /**  When one or more new moves is found, should I vibrate the
         device 
         */
        public static final int notify_vibrate=0x7f060177;
        /**  text of label identifying the field where human players can
         enter an option password.  The label and field disappear when
         the robot player checkbox is checked because it makes no
         sense for a robot to have a password.  In fact, passwords
         only make sense where there's more than one local human
         player on a device, so they are infrequently used in network
         games as well. 
         */
        public static final int password_label=0x7f0600e9;
        public static final int paste_done_fmt=0x7f060296;
        public static final int pct_suffix=0x7f06028c;
        /**  If this preference is checked, tapping on the scoreboard
         entry for any player reveals that player's tiles and any
         pending move (after asking for his password if one is set.)
         This feature, which is disabled by default, is meant for the
         case where serveral human players are sharing a device: it
         might make sense for one to be able to study the board even
         though it's not his turn e.g. while the player whose turn it
         is is temporarily unable to play. 
         */
        public static final int peek_other=0x7f060168;
        /**  explanation of the above 
         */
        public static final int peek_other_summary=0x7f060169;
        /**   
         */
        public static final int phone_label=0x7f06022d;
        /**  Don't warn, but simply force to skip turn (give 0 points)
         when user attempts to play word not in the wordlist. 
         */
        public static final int phonies_disallow=0x7f0600da;
        /**  These are the three choices in the popup above whose text is
         phonies_spinner_prompt 
 Don't care if words played are in the wordlist or not 
         */
        public static final int phonies_ignore=0x7f0600d8;
        /**  title of popup used to determine how words are handled that
         are not in the wordlist used for the game (or player if using
         different wordlists per player) 
         */
        public static final int phonies_spinner_prompt=0x7f0600d7;
        /**  warn player when word played is not in the wordlist, but
         allow him to play it. 
         */
        public static final int phonies_warn=0x7f0600d9;
        /**   
         */
        public static final int pick_faceup=0x7f0601f7;
        /**   
         */
        public static final int pick_url_title_fmt=0x7f0601ee;
        /**  Text of button at bottom.  Press it and you exit this
         configure screen and open the game into the Board screen 
         */
        public static final int play=0x7f0600df;
        /**      
       ############################################################
       # :Dialogs:
       # Player edit dialog
       #
       # This comes up when you tap on a player within the Game
       # config screen
       ############################################################
      
 dialog title 
         */
        public static final int player_edit_title=0x7f0600e3;
        /**  used to create default player names.  Number between 1 and 4
         is substituted 
         */
        public static final int player_fmt=0x7f0601b4;
        /**  text of lable identifying the field in which player's name is
         set/displayed 
         */
        public static final int player_label=0x7f0600e5;
        /**  text for separator above the list of players that's used for
         networked games.  The numbers of local and non-local players
         are substituted for %1$d and %2$d. 
         */
        public static final int players_label_host_fmt=0x7f0600c2;
        /**  text for separator above the list of players that's used for
         non-networked games 
         */
        public static final int players_label_standalone=0x7f0600c1;
        /**  Toast shown when players are missing, same time as above
           but more subtle.  
         */
        public static final int players_miss_fmt=0x7f0600f3;
        /**  Label for the first "player name" preference 
         */
        public static final int pref_player1_name=0x7f060133;
        /**  Label for the second "player name" preference (unused)
         */
        public static final int pref_player2_name=0x7f060134;
        /**  Label for the third "player name" preference (unused) 
         */
        public static final int pref_player3_name=0x7f060135;
        /**  Label for the fourth "player name" preference (unused)
         */
        public static final int pref_player4_name=0x7f060136;
        /** 
       ############################################################
       # :Screens:
       # Appearances subscreen of Preferences screen
       ############################################################
      
 title of this sub-preference 
         */
        public static final int prefs_appearance=0x7f060143;
        /**  clarification of the above 
         */
        public static final int prefs_appearance_summary=0x7f060144;
        /**        
       ############################################################
       # :Screens:
       # Behavior preference subscreen (within Preferences screen)
       ############################################################
      
 title of this sub-preference 
         */
        public static final int prefs_behavior=0x7f06015e;
        /**  clarification of the above 
         */
        public static final int prefs_behavior_summary=0x7f06015f;
        /** 
       ############################################################
       # :Screens:
       # Individual Colors preference subscreen (within Appearances
       # subscreen)
       ############################################################
      
 title of this sub-preference 
         */
        public static final int prefs_colors=0x7f060150;
        /**  clarification of the above 
         */
        public static final int prefs_colors_summary=0x7f060151;
        /**        
       ############################################################
       # :Screens:
       # New-game defaults subscreen of Preferences screen
       ############################################################
      
 title of this sub-preference 
         */
        public static final int prefs_defaults=0x7f06012f;
        /**  clarification of the above 
         */
        public static final int prefs_defaults_summary=0x7f060130;
        /**  sub-preference for dictionaries (soon to be called "word lists") 
         */
        public static final int prefs_dicts=0x7f060138;
        /**  clarification of above 
         */
        public static final int prefs_dicts_summary=0x7f060139;
        /**  sub-preference title for editing default player names.
         There's only enabled now, though.
         */
        public static final int prefs_names=0x7f060131;
        /**  clarification of the above 
         */
        public static final int prefs_names_summary=0x7f060132;
        /**  Used when prev player's name can't be looked up 
         */
        public static final int prev_player=0x7f0602c8;
        public static final int progress_title=0x7f0602bc;
        /**   
         */
        public static final int prompt_max_len=0x7f060201;
        /**   
         */
        public static final int prompt_min_len=0x7f060200;
        public static final int proxy_port=0x7f060085;
        /**  Short for "points", this is shown at the right end of the
         tray in place of the first tile placed along with the points
         the current move would earn if committed. 
         */
        public static final int pts=0x7f0600f5;
        /**  If you check the join_room checkbox Crosswords queries the
    relay.  This is the text of the progress indicator displayed what
    that's going on.  (It's often visible for only a very short
    time.)
         */
        public static final int public_names_progress_fmt=0x7f0600cc;
        /**  Title for generic dialog asking a question, usually in the
         middle of a game, like "do you want to commit this move?"
         */
        public static final int query_title=0x7f0601c6;
        /**  Text of dialog asking user to confirm a move that exchanges
         tiles (instead of forming a new word to earn points) 
         */
        public static final int query_trade_fmt=0x7f06018f;
        /**        
       ############################################################
       # :Dialogs:
       # Color edit dialog
       # 
       # A sub-sub preference, this is displayed each time the user
       # wants to edit a color described by the strings above
       ############################################################
      
 Names of the three colors by which colors can be edited in
         the color preferences dialog 
         */
        public static final int red=0x7f06015b;
        public static final int redir_host=0x7f060079;
        /**  Title of dialog used to alert players to relay-related
         problems with the current game. 
         */
        public static final int relay_alert=0x7f0600f8;
        public static final int relay_alert_title=0x7f06027d;
        /**  ############################################################
         # :Screens:
         # RelayGameActivity screen
         #
         # This screen is a simple alternative to the Game Configure
         # screen.  You'll get it when you choose the list_item_config
         # on certain unconfigured simple relay games (currently simple
         # means they have 2 players.  These days about the only way to
         # get this screen is to create a relay game manually and to
         # abort after making the room name empty.  That is, this is
         # left over from an older way of helping people connect, from
         # before invitations.

         # The dialog has a list of instructions, two text fields for
         # room name and local player name, and two buttons.
         ############################################################
         
 This is the heading above the list of steps.  The default
         language is substituted for %1$s. 
         */
        public static final int relay_game_explain_fmt=0x7f060195;
        public static final int relay_host=0x7f060078;
        public static final int relay_port=0x7f060084;
        /**  Shown in toast when relaunching after switching dicts 
         */
        public static final int reload_new_dict_fmt=0x7f06025c;
        public static final int remote_digesting=0x7f0602b6;
        public static final int remote_empty=0x7f0602b5;
        /**  checkbox determining of this player is on this device or
         remote.  If remote, then the rest of the fields disappear
         (since they will be set by the remote device.) 
         */
        public static final int remote_label=0x7f0600e4;
        public static final int remote_no_net=0x7f0602b7;
        /**   
         */
        public static final int remote_undone=0x7f060230;
        public static final int rename_group_label=0x7f060272;
        /**  text within rename dialog (triggered by selecting
         list_item_rename) 
         */
        public static final int rename_label=0x7f0600aa;
        public static final int resend_finished_fmt=0x7f06010e;
        /**  if this preference is checked, the hardware volume keys will
         work to zoom the board in and out (and will not control
         volume) This only applies when the Board screen is
         frontmost. 
         */
        public static final int ringer_zoom=0x7f060166;
        /**  explanation of the above 
         */
        public static final int ringer_zoom_summary=0x7f060167;
        /**  checkbox determining if player is robot/automated or human 
         */
        public static final int robot_label=0x7f0600e8;
        /**  Used to format robot player names in the lists of players
         found in each game listing 
         */
        public static final int robot_name_fmt=0x7f060090;
        /**  Three possible choices presented in the popup above 
         */
        public static final int robot_smart=0x7f0600d4;
        public static final int robot_smarter=0x7f0600d5;
        public static final int robot_smartest=0x7f0600d6;
        /**  title of popup used to select how "smart" (how capable) the
    robot player will be. 
         */
        public static final int robot_spinner_prompt=0x7f0600d3;
        /**  text of checkbox 
         */
        public static final int room_public=0x7f0600ca;
        /**  title for popup of public rooms found on server 
         */
        public static final int room_public_prompt=0x7f0600cb;
        /**   
         */
        public static final int scan_progress=0x7f060209;
        public static final int sel_games_fmt=0x7f060280;
        public static final int sel_groups_fmt=0x7f060281;
        public static final int sel_items_fmt=0x7f0602a0;
        /** 
       ############################################################
       # :Dialogs:
       # Wordlists screen dialogs
       ############################################################ 
      
 Used as the text fo the confirming/querying dialog that goes
         up when the dicts_item_select menuitem is chosen.  The
         possible answers are the three button text strings below. 
         */
        public static final int set_default_message_fmt=0x7f0600b5;
        /**  text of separator marking out other-setting area of the dialog 
         */
        public static final int settings_label=0x7f0600ce;
        /**  Checkbox that when set makes taps on the board manipulate an
         arrow that then directs where tiles go when tapped in the
         tray. 
         */
        public static final int show_arrow=0x7f06014c;
        /**  clarification of above 
         */
        public static final int show_arrow_summary=0x7f06014d;
        public static final int show_remote=0x7f0602ba;
        public static final int show_wordlist_browser=0x7f06027c;
        /**  If this preference is checked, the user will not be asked to
         confirm after selecting the "Turn done" menu (or tapping the
         points display at the right end of the tray) 
         */
        public static final int skip_confirm_turn=0x7f060162;
        /**  explanation of the above 
         */
        public static final int skip_confirm_turn_summary=0x7f060163;
        public static final int slmenu_clear_sel=0x7f060294;
        public static final int slmenu_copy_sel=0x7f060293;
        public static final int slmenu_deselect_all=0x7f06029f;
        public static final int slmenu_select_all=0x7f06029e;
        /**   
         */
        public static final int sms_disabled=0x7f06021f;
        /**   
         */
        public static final int sms_networked_desc=0x7f06021e;
        /**  The invitation process begins with this query.  The choice is
         between html and plaintext formatting but I also provide some
         explanation/guidance. 
         */
        public static final int sms_or_email=0x7f060183;
        public static final int sms_ready_text=0x7f06028a;
        /**   
         */
        public static final int smsname_label=0x7f060219;
        public static final int square_tiles=0x7f060279;
        public static final int square_tiles_summary=0x7f06027a;
        /**  Used in formatting moves and history 
         */
        public static final int str_bonus_all=0x7f060125;
        /**  Using the hint feature is cheating by some players, and it
         can be disabled via the hints_allowed preference.  I should
         be disabling the buttons in this case, but if I don't and you
         try to get a hint you'll get this message instead.
         */
        public static final int str_cant_hint_while_disabled=0x7f0601a6;
        /**  Displayed if you try to use the undo menuitem or button and
         there are no tiles on the board (no move has yet been made.)
         [If I'm being clever and disabling those features in this
         case there may be no way to see this.] 
         */
        public static final int str_cant_undo_tileassign=0x7f0601a5;
        /**  Beginning of the message presented to a user when asking him
         to confirm committing the current turn
         */
        public static final int str_commit_confirm=0x7f060122;
        /**  Used to format game name plus some other information as the
         one-line summary for each game in the main screen.  The name
         of the game is substituted for %1$s.  Something else
         (language, player names, etc), is substituted for %2$s. This
         does not require translation unless the parentheses or
         ordering is wrong for your language.
         */
        public static final int str_game_name_fmt=0x7f06008f;
        /**  Used in formatting history and move reports; means user
         skipped a turn because of an attempted illegal move/play of a
         phony 
         */
        public static final int str_lostturn=0x7f060121;
        /**  Displayed when you try to commit a turn that is illegal
         because there is empty space between some of the tiles
         placed, i.e. they do not form a single word. 
         */
        public static final int str_no_empties_in_turn=0x7f06019e;
        /**  Same as above, but used when you try to show tiles belonging
         to a player on another device (a remote player.) 
         */
        public static final int str_no_peek_remote_tiles=0x7f0601a3;
        /**  Displayed when you try to reveal a robot player's tiles,
         either by tapping on its "hidden" rack (marked by "?"
         characters) or by tapping on its scoreboard entry.  (The
         ability to reveal another players tiles this way is
         controlled by the peek_other preference and is disabled by
         default.)
         */
        public static final int str_no_peek_robot_tiles=0x7f0601a2;
        /**  Used, with remote player's name substituted for %1$s, to
    indicate that the player is remote. 
         */
        public static final int str_nonlocal_name_fmt=0x7f060123;
        /**  Displyed when you try to commit a move and it's not your
         turn. 
         */
        public static final int str_not_your_turn=0x7f0601a1;
        /**  Used in formatting game history and move summaries 
         */
        public static final int str_pass=0x7f060118;
        /**  Used in formatting exchange move summaries: passed means the
         user skipped his turn, or made a move involving 0 tiles for 0
         points 
         */
        public static final int str_passed=0x7f06011e;
        /**  Used to alert user to loss of turn when a move is made and
         phonies is set to lose turn when word used not in wordlist
         
         */
        public static final int str_phony_rejected=0x7f06011d;
        /**  Shown when using the the Game configure screen to configure a
         networked game and you try to make all players local. 
         */
        public static final int str_reg_server_sans_remote=0x7f0600db;
        /**  This error message is shown when a remote device tries to
         join a game and is providing more players than that game
         expects.  I do not believe it is possible to see this message
         when playing via the relay because the relay is aware of how
         many players are expected and only connects devices where the
         numbers match. 
         */
        public static final int str_reg_unexpected_user=0x7f0601a7;
        /**  Used in formatting remote player move summaries 
         */
        public static final int str_remote_moved_fmt=0x7f060116;
        /**  Used in formatting final scores display 
         */
        public static final int str_resigned=0x7f060256;
        /**        
       ############################################################
       # Board info/error dialog messages
       #
       # These strings are used to create dialogs that appear during
       # games while the Board screen is visible
       ############################################################
      
 Notifies user of a normal robot move 
         */
        public static final int str_robot_moved=0x7f06010f;
        /**  Shown when a remote device tries to join a game and wants to
         play in a different language.  As with the above, this should
         be impossible when connecting via the relay. 
         */
        public static final int str_server_dict_wins=0x7f0601a8;
        /**  Displayed when you try to commit a turn that is illegal
         because tiles played do not touch other tiles already on the
         board (or the middle/star square in the case of the initial
         move.) 
         */
        public static final int str_tiles_must_contact=0x7f0601a0;
        /**  
       error messages
      
 Displayed when you try to commit a turn that is illegal
         because the tiles placed are not all in the same row or
         column. 
         */
        public static final int str_tiles_not_in_line=0x7f06019d;
        /**  Displayed when you try to begin a trade but there are not
         seven or more tiles in the pool.  The rules don't allow
         trading in this case. 
         */
        public static final int str_too_few_tiles_left_to_trade=0x7f0601a4;
        /**  Displayed when you try to commit the first move of the game
         and are playing a single tile.  The first move must include
         two or more tiles. 
         */
        public static final int str_two_tiles_first_move=0x7f06019f;
        /**  Used in formatting final scores display 
         */
        public static final int str_winner=0x7f060257;
        /**  Used in formatting game history (not move summaries since
         information about the current rack is hidden then) 
         */
        public static final int strd_cumulative_score_fmt=0x7f060115;
        /**  Used in formatting game history and move summaries 
         */
        public static final int strd_remaining_tiles_add_fmt=0x7f060112;
        /**  Intro to the paragraph lisiting all of the tiles remaining 
         */
        public static final int strd_remains_expl_fmt=0x7f060128;
        /**  First line in the remaining tiles dialog (reached by tapping
         the number at left end of the scoreboard) 
         */
        public static final int strd_remains_header_fmt=0x7f060127;
        /**  Notifies user of a robot trade move 
         */
        public static final int strd_robot_traded_fmt=0x7f060110;
        /**  I don't know how this is used. :-) 
         */
        public static final int strd_time_penalty_sub_fmt=0x7f060117;
        /**  Used in formatting reports of trades (exchanges of tiles).
         Number of tiles traded is substituted for %1$d
         */
        public static final int strd_traded_fmt=0x7f060120;
        /**  Used in formatting moves and history.  The total score for
         one turn is substituted for %1$d.
         */
        public static final int strd_turn_score_fmt=0x7f060126;
        /**  Used in formatting game history and move summaries 
         */
        public static final int strd_unused_tiles_sub_fmt=0x7f060113;
        /**  Used in formatting game history and move summaries 
         */
        public static final int strs_move_across_fmt=0x7f060119;
        /**  Used in formatting game history and move summaries 
         */
        public static final int strs_move_down_fmt=0x7f06011a;
        /**  Used in formatting game history and move summaries 
         */
        public static final int strs_new_tiles_fmt=0x7f060114;
        /**  Used in formatting game history and move summaries 
         */
        public static final int strs_tray_at_start_fmt=0x7f06011b;
        /**  title for window you get when you select menu with text
         board_menu_game_counts 
         */
        public static final int strs_values_header_fmt=0x7f060111;
        /**  formats tiles and score together, and probably doesn't need
         translation unless the colon ':' needs to be replaced 
         */
        public static final int strsd_summaryscored_fmt=0x7f06011f;
        /**  Used in formatting exchange move summaries 
         */
        public static final int strss_traded_for_fmt=0x7f06011c;
        public static final int study_langpick=0x7f060299;
        public static final int study_no_lang_fmt=0x7f06029a;
        public static final int study_no_lists=0x7f06029b;
        public static final int studylist_title_fmt=0x7f060298;
        /**  If substituting an existing same-language wordlist by
         choosing button_substdict user gets to choose from a list of
         wordlists.  This is the title of that list. 
         */
        public static final int subst_dict_title=0x7f0601b1;
        /**   
         */
        public static final int summary_conn=0x7f06020e;
        /**   
         */
        public static final int summary_conn_sms_fmt=0x7f06022e;
        /**  Preference to control what's listed next to game name in the
         first line of a game summary in the main games-list screen,
         e.g., if the option is "Game Language", "English" in the
         listing "Game 2 (English)"
         
         The following strings beginning with "game_summary_field_" are
         possible values 
         */
        public static final int summary_field=0x7f060145;
        /**   
         */
        public static final int summary_gameover=0x7f06020d;
        /**  The display of each networked game includes one of three
         states it can be in in the process of connecting to the
         relay.  These next three strings are used to create those
         three. 
 First state: is configured to use a room but has not yet
         contacted the relay and been assigned that room. 
         */
        public static final int summary_relay_conf_fmt=0x7f060092;
        /**  Third state: enough devices have connected in the room to
         form a complete game.  We'll be in this state as long as the
         game exists. 
         */
        public static final int summary_relay_conn_fmt=0x7f060094;
        /**  Final state: game is over. 
         */
        public static final int summary_relay_gameover_fmt=0x7f060095;
        /**  Second state: has been assigned to a room on the relay
         (meaning the network is working) but there are not yet as
         many players as expected: the game is not complete and play
         cannot happen. 
         */
        public static final int summary_relay_wait_fmt=0x7f060093;
        public static final int summary_send_data_sms=0x7f060080;
        /**  explanation of the above 
         */
        public static final int summary_sort_tiles=0x7f060165;
        public static final int summary_studyon=0x7f060291;
        public static final int summary_thumbsize=0x7f060282;
        /**   
         */
        public static final int summary_wait_guest=0x7f06020c;
        /**   
         */
        public static final int summary_wait_host=0x7f06020b;
        /**  Used to indicate that a preference is not enabled, i.e. not
         part of the game and that the user should ignore it. 
         */
        public static final int tell_unused=0x7f060137;
        public static final int thumb_off=0x7f060283;
        /**  color of the tiles' background 
         */
        public static final int tile_back=0x7f060157;
        /**   
         */
        public static final int tilepick_all=0x7f0601f5;
        /**   
         */
        public static final int tilepick_undo=0x7f0601f4;
        /**  title of dialog brought up in response to the
         board_menu_game_left menu. The dialog lists all tiles
         remaining in the pool, i.e. not on the board or in the rack
         of the player whose turn it is. 
         */
        public static final int tiles_left_title=0x7f0601c1;
        /** 
       ############################################################
       # :Screens:
       # Wordlists screen 
       #
       # list of installed wordlists (formerly called dictionaries)
       ############################################################ 
      
 window title 
         */
        public static final int title_dicts_list=0x7f0600ad;
        /**  
       ############################################################
       # :Screens:
       # Game configure screen 
       ############################################################ 
      
 window title (game name substituted for %1$s) 
         */
        public static final int title_game_config_fmt=0x7f0600bc;
        /**   
         */
        public static final int title_gamebt_config_fmt=0x7f0600be;
        /**  alternate window title used when game is networked 
         */
        public static final int title_gamenet_config_fmt=0x7f0600bd;
        /**  title for popup list of langugages from which user picks 
         */
        public static final int title_langs_list=0x7f0600bf;
        /**   
         */
        public static final int title_lookup=0x7f0601ea;
        public static final int title_lookup_study=0x7f0601eb;
        /**    
       ############################################################
       # :Screens:
       # Preferences screen(s)
       #
       # There are four screens plus one for debugging that isn't
       # translated: New-game defaults, Appearances, Behavior, and
       # Network Game settings
       ############################################################
      
 window title 
         */
        public static final int title_prefs=0x7f06012a;
        public static final int title_send_data_sms=0x7f06007f;
        /**  If this preference is checked, tiles in the rack will be
         re-ordered alphabetically whenever tiles are added,
         i.e. after ever move.
         */
        public static final int title_sort_tiles=0x7f060164;
        public static final int title_studyon=0x7f060290;
        /**  title of dialog allowing user to pick tiles "face up".  (This
         feature is not yet supported on Android.) 
         */
        public static final int title_tile_picker=0x7f0601c0;
        public static final int update_dicts_fmt=0x7f0602bb;
        /**  text of checkbox controlling whether there's a game timer 
         */
        public static final int use_timer=0x7f0600d1;
        /**  Used to separate names of players when listing them on one
    line in a game summary.  The \u0020 is a space in xml. 
         */
        public static final int vs_join=0x7f060124;
        /**   
         */
        public static final int warn_nomobile_fmt=0x7f060227;
        /**   
         */
        public static final int warn_sms_disabled=0x7f06024f;
        /**   
         */
        public static final int warn_unlimited=0x7f06022f;
        /**   
         */
        public static final int word_search_hint=0x7f0601f3;
        public static final int xlations_enabled_summary=0x7f0602a6;
        public static final int xlations_enabled_title=0x7f0602a5;
        public static final int xlations_locale=0x7f06008a;
        /**  Empty in English, this should contain the name of the
         translator/creator of the strings.xml file for this
         language
         */
        public static final int xlator=0x7f0601e2;
        public static final int xwords_nfc_mime=0x7f06006c;
    }
    public static final class style {
        public static final int about_items=0x7f080005;
        public static final int color_edit_text=0x7f080003;
        public static final int color_seek_bar=0x7f080002;
        public static final int config_separator=0x7f080000;
        public static final int evenly_spaced_horizontal=0x7f080008;
        public static final int expander_button=0x7f080009;
        public static final int expander_label=0x7f08000a;
        public static final int group_items=0x7f080006;
        public static final int relay_explain=0x7f080007;
        public static final int role_config_hint=0x7f080001;
        public static final int toolbar_button=0x7f080004;
    }
    public static final class xml {
        public static final int xwprefs=0x7f040000;
    }
}
